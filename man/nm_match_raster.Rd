% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nm_match_raster.R
\name{nm_match_raster}
\alias{nm_match_raster}
\title{Match two raster with different properties by transfering values
of a raster to a reference one (resampling).}
\usage{
nm_match_raster(
  to_match,
  target,
  method = "near",
  threads = FALSE,
  save_file = FALSE,
  file_name = "",
  ...
)
}
\arguments{
\item{to_match}{SpatRaster to match target}

\item{target}{SpatRaster with the properties that to_match should be transfered to}

\item{method}{Method used for estimating the new cell values. One of:
\itemize{
\item \emph{bilinear} - the default: assigns a weighted average of the four nearest cells
from the \code{to_match} raster to the cell of the \code{target} one. This is the fastest
method that is appropriate for continuous rasters
\item \emph{near}: assigns the value of the nearest cell of the \code{to_match} raster to the
cell of the \code{target} one. This is a fast simple technique that is usually suitable
for resampling categorical rasters
\item \emph{cubic}: uses values of the 16 nearest cells of the \code{to_match} raster to
determine the output cell value, applying third-order polynomial functions.
Used for continuous rasters and results in a smoother surface compared to bilinear
interpolation, but is computationally more demanding
\item \emph{cubicspline}: also uses values of the 16 nearest cells of the \code{to_match} raster
to determine the output cell value, but applies cubic splines (piecewise third-order polynomial functions).
Used for continuous rasters.
\item \emph{lanczos}: uses values of the 36 nearest cells of the \code{to_match} raster to determine the output cell value.
Used for continuous rasters.
\item \emph{sum}: the weighted sum of all non-NA contributing grid cells.
\item \emph{min}, \emph{q1}, \emph{med}, \emph{q3}, \emph{max}, \emph{average}, \emph{mode}, \emph{rms}: the minimum,
first quartile, median, third quartile, maximum, mean, mode, or root-mean-square value
of all non-NA contributing grid cells.
}}

\item{threads}{Default FALSE. If TRUE multiple threads are used (faster for large files)}

\item{save_file}{If TRUE, the output is saved}

\item{file_name}{character. Output file name (with format e.g .tif, .tiff, .TIF or .TIFF)}

\item{...}{additional arguments for writing raster. See \code{\link[terra:writeRaster]{terra::writeRaster()}}.}
}
\description{
This function transfers values between two rasters that have a different
extent and/or resolution.
}
\examples{
env_layers_path <- paste0(system.file("extdata", package = "nimo"), "/env_layers")
env_layers_path <- list.files(env_layers_path, full.names = TRUE)[1:2]

target <- terra::rast(env_layers_path[1]) # reference raster to get properties from
to_match <- terra::rast(env_layers_path[2]) # raster that will inherit properties

new_dnw <- nm_match_raster(to_match = to_match, target = target)

}
\references{
\itemize{
\item Hijmans, R. J., Bivand, R., Forner, K., Ooms, J., Pebesma, E., & Sumner, M. D. (2022). Package ‘terra.’ Maintainer: Vienna, Austria.
\item Lovelace, R., Nowosad, J., & Muenchow, J. (2019). Geocomputation with R.
Chapman and Hall/CRC. \href{https://doi.org/10.1201/9780203730058}{(https://doi.org/10.1201/9780203730058)}
}
}
